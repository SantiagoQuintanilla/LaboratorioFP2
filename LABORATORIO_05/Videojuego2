import java.util.*;
public class Videojuego2 {
	 public static void main(String[] args) {
		 Random rand=new Random();
		 int NumSold=rand.nextInt(10)+1;
		 Soldado [][] tablero=inicializar(NumSold);
		 imprimirTablero(tablero);
		 Soldado [] ejercito=arregloEjercito(tablero, NumSold);
		 Soldado soldMayor=soldadoMayorVida(ejercito);
		 System.out.println("El soldado con mayor vida es: \n"+soldMayor);
		 Double vida=promedioNivelVida(ejercito);
		 System.out.println("El promedio del nivel de vida es: "+vida); 
		 imprimirVida(ejercito);

		 imprimirOrdenCreacion(ejercito);
		 imprimirRankingVida(ejercito);
	 }
	 //Metodo que imprime el tablero, donde las 'X' marcan los soldados creados//
	 public static void imprimirTablero(Soldado [][]arreglo) {
		 System.out.println("\n_____________________________________________________");
		 System.out.println("Tablero de posiciones: ");
	        for (int k=0;k<arreglo.length;k++) {
	        	System.out.println("");
	        	for (int j=0;j<arreglo[k].length;j++) {
	        		boolean ocupado=(arreglo[k][j]).getOcupado();
	        		if (ocupado) {
	        			System.out.print("|_X_|");
	        		} else {
	        			System.out.print("|___|");
	        		}
	        	}
	        }
	 }
	 //Metodo que inicializa el arreglo de soldados y crea la cantidad de soldados segun el
	 //numero aleatorio generado en el metodo main//
	 public static Soldado[][] inicializar(int x) {
		 Random rand=new Random();
		 Soldado ejercito[][]=new Soldado[10][10];
		 for (int i=0;i<ejercito.length;i++) {
			 for (int j=0;j<ejercito[i].length;j++) {
				 ejercito[i][j]=new Soldado();
				 ejercito[i][j].setOcupado(false);
			 }
		 }
		 for (int k=0;k<x;k++) {
			 int fila=rand.nextInt(10);
			 int columna=rand.nextInt(10);
			 boolean ocupado=(ejercito[fila][columna]).getOcupado();
			 while (ocupado) {
				 fila=rand.nextInt(10);
				 columna=rand.nextInt(10);
				 ocupado=ejercito[fila][columna].getOcupado();
			 }
			 String nombre="Soldado"+(k+1);
			 ejercito[fila][columna].setNombre(nombre);
			 ejercito[fila][columna].setFila(fila+1);
			 ejercito[fila][columna].setColumna(columna+1);
			 ejercito[fila][columna].setNivelVida(rand.nextInt(5)+1);
			 ejercito[fila][columna].setOcupado(true);
		}
		 return ejercito;	 
	 }
	 //Metodo que busca el soldado con mayor nivel de vida y retorna el objeto//
	 public static Soldado soldadoMayorVida (Soldado [] arreglo) {
		 int mayor=0;
		 Soldado soldadoMayor=null;
		 System.out.println("\n_____________________________________________________");
		  	for (int i=0;i<arreglo.length;i++) {
		  			int vida=arreglo[i].getNivelVida();
		  			if (vida>mayor) {
		  				mayor=vida;
		  				soldadoMayor=arreglo[i];
		  			}
		  	}	
		   	return soldadoMayor; 
	 }
	 //Metodo que muestra el promedio del nivel de vida de todos los soldados creados//
	 public static double promedioNivelVida (Soldado [] arreglo) {
		 int acumulado=0;
		 System.out.println("\n_____________________________________________________");
		 for (int i=0;i<arreglo.length;i++) {
		  		boolean ocupado=arreglo[i].getOcupado();
		  		if (ocupado) {
		  			int vida=arreglo[i].getNivelVida();
		  			acumulado+=vida; 
		  		}
		 }
		 double promedio=acumulado/(arreglo.length);
		 return promedio;
	 }
	 //Metodo que muestra el nivel de vida de todo el ejercito//
	 public static void imprimirVida(Soldado[] arreglo) {
		 System.out.println("\n_____________________________________________________");
		 System.out.println("Niveles de vida de todo el ejercito: ");
		 for (int i=0;i<arreglo.length;i++) {
		  			System.out.println("-Soldado: "+arreglo[i].getNombre()+"\tVida: "+arreglo[i].getNivelVida());
		 }
	 }
	 public static Soldado[] arregloEjercito (Soldado[][] arreglo, int x) {
		 Soldado ejercito[]=new Soldado[x];
		 int contador=0;
		 for (int i=0;i<arreglo.length;i++) {
		  		for (int j=0;j<arreglo[i].length;j++) {
		  			boolean ocupado=arreglo[i][j].getOcupado();
		  			if (ocupado) {
		  				ejercito[contador]=arreglo[i][j];
		  				contador++;
		  			}
		  		}
		 }
		 return ejercito;
	 }
	 //Metodo que ordena a los soldados en el orden que fueron creados 
	 //y los imprime en tal orden
	 //--->Se emplea el algoritmo de Ordenamiento Burbuja
	 public static void imprimirOrdenCreacion (Soldado[] arreglo){
		 System.out.println("\n_____________________________________________________");
		 System.out.println("Orden de los Soldados segun su creacion: ");
		 for (int i=1;i<arreglo.length;i++) {
			 for (int j=0;j<arreglo.length-1;j++) {
				 if ((arreglo[j].getNombre()).compareTo(arreglo[j+1].getNombre())>0) {
					 Soldado temp=arreglo[j];
					 arreglo[j]=arreglo[j+1];
					 arreglo[j+1]=temp;
				 }
			 }
		 }
		 for (int k=0;k<arreglo.length;k++) {
			 System.out.println(arreglo[k]);
		 }
	 }
	 //Metodo que rankea a los soldados decrecientemente segun su nivel de vida
	 // y los imprime en tal orden
	 //--->Se emplea el algoritmo de Ordenamiento por Seleccion
	 public static void imprimirRankingVida (Soldado[] arreglo) {
		 System.out.println("\n_____________________________________________________");
		 System.out.println("Ranking del nivel de vida de los Soldados: ");
		 int n=0;
		 for (int i=0;i<arreglo.length-1;i++) {
			 int mayor=i;
			 n++;
			 for (int j=n;j<arreglo.length;j++) {
				 if (arreglo[j].getNivelVida()>arreglo[mayor].getNivelVida()) {
					 mayor=j;
				 }
			 }
			 Soldado temp=arreglo[mayor];
			 arreglo[mayor]=arreglo[i];
			 arreglo[i]=temp;
		 }
		 for (int k=0;k<arreglo.length;k++) {
			 System.out.println(arreglo[k]);
		 }
	 }
}
